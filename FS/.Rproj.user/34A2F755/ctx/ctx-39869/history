print.table(all_lancs_dr1$Month)
# Adding a variable/column to show this dataframe comes from Lancashire. This will need to be clear in the full merge across LAs.
LA = c("Lancashire")
all_lancs_dr1$LA <- "Lancashire"
# Removing all the singular data frames
# Get the names of the data frames starting with 'lancs'
# lancs_data_frames <- ls(pattern = "^lancs")
# Remove the data frames
# rm(list = lancs_data_frames)
# Reading in SWINDON INDIVIDUALLY ---------------------------
interim_swind_dr1_nov20 <- read_excel("Data/FS_DR1/swindon_dr1_nov20.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
swind_dr1_ap21 <- read_excel("Data/FS_DR1/swindon_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
swind_dr1_nov21 <- read_excel("Data/FS_DR1/swindon_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
swind_dr1_apr22 <- read_excel("Data/FS_DR1/swindon_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
trim_ws = TRUE)
swind_dr1_nov22 <- read_excel("Data/FS_DR1/swindon_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Looking at the composition of the files
colnames(interim_swind_dr1_nov20)
# Changing nov 20
swind_dr1_nov20 <- interim_swind_dr1_nov20[-c(3,4,5,6,7,9)]
colnames(swind_dr1_nov20)
#drop interim
rm(interim_swind_dr1_nov20)
# Reconfiguring DATE AND TIME for Swindon =================
# Unable to bind the dataframes as not all the month columns are configured as date time.
# Create a vector of dataframe names
dataframe_names <- c("swind_dr1_ap21", "swind_dr1_apr22", "swind_dr1_nov21", "swind_dr1_nov22", "swind_dr1_nov20")
# Loop over the dataframe names
for (df_name in dataframe_names) {
# Get the dataframe object using its name
df <- get(df_name)
# Check the class of the Month variable
month_class <- class(df$Month)
# Print the result
cat("Class of Month variable in", df_name, ":", month_class, "\n")
}
summary(swind_dr1_nov20)
#month was uploaded as character 'Decemer 2019'
swind_dr1_nov20 <- swind_dr1_nov20 %>%
mutate(Month = na_if(Month, "Decemer 2019"))
#fill in december date
# NOT WORKING YET swind_dr1_nov20$Month <- ifelse(is.na(swind_dr1_nov20$Month),
#   as.Date("2019-12-01"), swind_dr1_nov20$Month)
#replace month with na
swind_dr1_nov20 <- swind_dr1_nov20 %>%
mutate(Month = as.numeric(Month))
#convert strings to numeric
swind_dr1_nov20 <- swind_dr1_nov20%>%
mutate(Month = as.Date(Month, origin = "1899-12-30")) #excel values, need to convert to date
#convert numeric to dates
class(swind_dr1_nov20_new$Month)
View(swind_dr1_nov20)
#Putting them all in the same formatt (date)
# dataframe_date <- c("swind_dr1_nov20", "swind_dr1_ap21", "swind_dr1_apr22", "swind_dr1_nov21", "swind_dr1_nov22")
# Loop over the dataframe names
#for (df_name in dataframe_date) {
# Get the dataframe object using its name
#  df <- get(df_name)
# Convert the Month variable to date using dmy()
#  df$Month <- dmy(df$Month, format = "%b-%Y")
# Assign the modified dataframe back to the global environment
#  assign(df_name, df)
# }
# When trying to bind the columns it says that: Can't combine `..1$Number of CIN plans that started this month in the LA` <double> and `..4$Number of CIN plans that started this month in the LA` <character>.
# Look at the class of the CIN column
dataframe_names <- c("swind_dr1_ap21", "swind_dr1_apr22", "swind_dr1_nov21", "swind_dr1_nov22", "swind_dr1_nov20")
# Loop over the dataframe names
for (df_name in dataframe_names) {
# Get the dataframe object using its name
df <- get(df_name)
# Check the class of the Month variable
CIN_class <- class(df$`Number of CIN plans that started this month in the LA`)
# Print the result
cat("Class of CIN variable in", df_name, ":", CIN_class, "\n")
}
## Nov 21 is character
View(swind_dr1_nov21)
# The CIN column says 'Currently unavailable'
# Code to change this into numeric like the rest so that it can bind
swind_dr1_nov21$`Number of CIN plans that started this month in the LA`<-
as.numeric(swind_dr1_nov21$`Number of CIN plans that started this month in the LA`)
## NAs introduced by coercion
# Binding the swindon files together
all_swind_dr1 <- bind_rows (swind_dr1_nov20, swind_dr1_ap21, swind_dr1_apr22, swind_dr1_nov21, swind_dr1_nov22)
#Adding variable for LA
LA = c("Swindon")
all_swind_dr1$LA <- "Swindon"
# Move LA variable so that it's the first column. So far not working, come back to
# all_lancs_dr1 %%
#  relocate(LA) %%
#  head()
# Reading in TELFORD AND WREKIN INDIVIDUALLY -------
telford_dr1_nov20 <- read_excel("Data/FS_DR1/telford_dr1_nov20(3).xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
colnames(telford_dr1_nov20)
# Need to drop three columns. Number 3, 4, 6
telford_dr1_nov20 <- telford_dr1_nov20[-c(3,4,6)]
#Reading in the rest of the files for Telford
telford_dr1_apr21 <- read_excel("Data/FS_DR1/telford_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
telford_dr1_nov21 <- read_excel("Data/FS_DR1/telford_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
telford_dr1_apr22 <- read_excel("Data/FS_DR1/telford_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
telford_dr1_nov22 <- read_excel("Data/FS_DR1/telford_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Merging Telford
all_telford_dr1 <- bind_rows(telford_dr1_nov20, telford_dr1_apr21, telford_dr1_apr22,
telford_dr1_apr22, telford_dr1_apr22)
LA = c("Telford")
all_telford_dr1$LA <- "Telford"
# Reading in WALSALL INDIVIDUALLY -----------------
walsall_dr1_nov20 <-  read_excel("Data/FS_DR1/walsall_dr1_nov20.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
colnames(walsall_dr1_nov20)
# Removing extra columns
walsall_dr1_nov20 <- walsall_dr1_nov20[-c(3,4,6)]
walsall_dr1_apr21 <-  read_excel("Data/FS_DR1/walsall_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
walsall_dr1_nov21 <-  read_excel("Data/FS_DR1/walsall_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
walsall_dr1_apr22 <-  read_excel("Data/FS_DR1/walsall_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
walsall_dr1_nov22 <-  read_excel("Data/FS_DR1/walsall_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Merging the walsall data
all_walsall_dr1 <- bind_rows( walsall_dr1_nov20, walsall_dr1_apr21, walsall_dr1_nov21,
walsall_dr1_apr22, walsall_dr1_nov22)
LA <- c("Walsall")
all_walsall_dr1$LA <- "Walsall"
View(all_walsall_dr1)
# Reading in WANDWSWORTH INDIVIDUALLY -----------
wands_dr1_nov20 <-  read_excel("Data/FS_DR1/wandsworth_dr1_nov20.xlsx",
sheet = "DR1 - Data - aggregate level",
range = "A1:O13",
col_names = TRUE,
trim_ws = TRUE)
colnames(wands_dr1_nov20)
# Removing extra columns
wands_dr1_nov20 <- wands_dr1_nov20[-c(3,4,6)]
wands_dr1_apr21 <-  read_excel("Data/FS_DR1/wandsworth_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
wands_dr1_nov21 <-  read_excel("Data/FS_DR1/wandsworth_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
wands_dr1_apr22 <-  read_excel("Data/FS_DR1/wandsworth_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
wands_dr1_nov22 <-  read_excel("Data/FS_DR1/wandsworth_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Merging the walsall data
all_wands_dr1 <- bind_rows(wands_dr1_nov20, wands_dr1_apr21, wands_dr1_nov21,
wands_dr1_apr22, wands_dr1_nov22)
LA <- c("Wandsworth")
all_wands_dr1$LA <- "Wandsworth"
View(all_wands_dr1)
# Investigating column names to ensure they are consistent across LAs
# SWINDON
colnames(all_swind_dr1)
# Dropping the 12th column for Swindon ([12] "Number of open CIN cases this month in the LA")
all_swind_dr1 <- all_swind_dr1[-c(12)]
#TELFORD
colnames(all_telford_dr1) # consistent
# WALSALL
colnames(all_walsall_dr1)
# ALL DR1s in one dataset with ROWS BINDED
all_dr1_bind <- bind_rows(all_lancs_dr1, all_swind_dr1, all_telford_dr1,
all_walsall_dr1, all_wands_dr1)
# All DR1s in one dataset MERGED ON DATE
all_dr1_merge <- merge(all_lancs_dr1, all_swind_dr1, by = "Month", all = TRUE)
all_dr1_merge <- merge(all_dr1_merge, all_telford_dr1, by = "Month", all = TRUE)
all_dr1_merge <- merge(all_dr1_merge, all_walsall_dr1, by = "Month", all = TRUE)
all_dr1_merge <- merge(all_dr1_merge, all_wands_dr1, by = "Month", all = TRUE)
View(all_dr1_merge)
View(all_dr1_bind)
est version of R
updateR()
check.for.updates.R() # if newer version R available or not
install.R() # download and run the latest version R installer
updateR()
# Check if latest version of R
install.packages("installr")
library(installr)
updateR()
library(tidyverse)
library(dplyr)
library(readxl)
library(tibble)
library(lubridate)
library(data.table)
# Clearing R -------------------------
rm(list = ls())
# READING IN THE DR1 FILES ---------------------------------------
##  Alternative code where things are read in individually - more time consuming --------------------
# Read in LANCASHIRE INDIVIDUALLY  ===================================
interim_lancs_dr1_nov20 <- read_excel("Data/FS_DR1/lancashire_dr1_nov20.xlsx",
sheet = "DR1 - Data - aggregate level",
range = "A2:N20")
class(interim_lancs_dr1_nov20$Month)
# Nov 20 dataset has three additional columns
colnames(interim_lancs_dr1_nov20)
# Check column names for another submission. Others do not have cols 3,4,6
lancs_dr1_ap21 <- read_excel("Data/FS_DR1/lancashire_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
range = "A1:K7")
colnames(lancs_dr1_ap21)
# Subset the df so that it matches the other DR1 entries
lancs_dr1_nov20 <- interim_lancs_dr1_nov20[-c(3,4,6)]
# Checking to see if these worked. It did.
colnames(lancs_dr1_nov20)
# Remove interim df
rm(interim_lancs_dr1_nov20)
# Reading in the rest of the data for Lancashire
lancs_dr1_apr21 <- read_excel("Data/FS_DR1/lancashire_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
range = "A1:K7")
lancs_dr1_nov21 <- read_excel("Data/FS_DR1/lancashire_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level")
lancs_dr1_apr22 <- read_excel("Data/FS_DR1/lancashire_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level")
lancs_dr1_nov22 <- read_excel("Data/FS_DR1/lancashire_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level")
colnames(lancs_dr1_ap21)
# Investigating the dates in Lancashire---------------------
dataframe_names <- c("lancs_dr1_ap21", "lancs_dr1_apr22", "lancs_dr1_nov21", "lancs_dr1_nov22", "lancs_dr1_nov20")
# Loop over the dataframe names
for (df_name in dataframe_names) {
# Get the dataframe object using its name
df <- get(df_name)
# Check the class of the Month variable
month_class <- class(df$Month)
# Print the result
cat("Class of Month variable in", df_name, ":", month_class, "\n")
}
# All files have month saved as a time and date:  POSIXct POSIXt
# Define the format string
format_string <- "%B-%y"  # %B represents the full month name, %y represents the two-digit year
# Parse the date column using the specified format
lancs_dr1_nov20$Month <- as.Date(lancs_dr1_nov20$Month, format = format_string)
lancs_dr1_nov20$Month <- as.Date(lancs_dr1_nov20$Month, format = "%mm-%YY")
# check it worked
class(lancs_dr1_nov20$Month)
# Doing this to the rest
lancs_dr1_ap21$Month <- as.Date(lancs_dr1_ap21$Month, format = "%m-%Y")
lancs_dr1_nov21$Month <- as.Date(lancs_dr1_nov21$Month, format = "%m-%Y")
lancs_dr1_apr22$Month <- as.Date(lancs_dr1_apr22$Month, format = "%m-%Y")
lancs_dr1_nov22$Month <- as.Date(lancs_dr1_nov22$Month, format = "%m-%Y")
View(lancs_dr1_nov22)
## Manually impute the date correctly.
# Merging LANCASHIRE ----------------------------
# To join two data frames vertically, use: total <- rbind(data frameA, data frameB)
all_lancs_dr1 <- bind_rows(lancs_dr1_nov20, lancs_dr1_apr21, lancs_dr1_nov21,
lancs_dr1_apr22, lancs_dr1_nov22)
# Adding a variable/column to show this dataframe comes from Lancashire. This will need to be clear in the full merge across LAs.
LA = c("Lancashire")
all_lancs_dr1$LA <- "Lancashire"
# Removing all the singular data frames
# Get the names of the data frames starting with 'lancs'
# lancs_data_frames <- ls(pattern = "^lancs")
# Remove the data frames
# rm(list = lancs_data_frames)
# Reading in SWINDON INDIVIDUALLY ---------------------------
interim_swind_dr1_nov20 <- read_excel("Data/FS_DR1/swindon_dr1_nov20.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
swind_dr1_ap21 <- read_excel("Data/FS_DR1/swindon_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
swind_dr1_nov21 <- read_excel("Data/FS_DR1/swindon_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
swind_dr1_apr22 <- read_excel("Data/FS_DR1/swindon_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
trim_ws = TRUE)
swind_dr1_nov22 <- read_excel("Data/FS_DR1/swindon_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Looking at the composition of the files
colnames(interim_swind_dr1_nov20)
# Changing nov 20
swind_dr1_nov20 <- interim_swind_dr1_nov20[-c(3,4,5,6,7,9)]
colnames(swind_dr1_nov20)
#drop interim
rm(interim_swind_dr1_nov20)
# Reconfiguring DATE AND TIME for Swindon =================
# Unable to bind the dataframes as not all the month columns are configured as date time.
# Create a vector of dataframe names
dataframe_names <- c("swind_dr1_ap21", "swind_dr1_apr22", "swind_dr1_nov21",
"swind_dr1_nov22", "swind_dr1_nov20")
# Loop over the dataframe names
for (df_name in dataframe_names) {
# Get the dataframe object using its name
df <- get(df_name)
# Check the class of the Month variable
month_class <- class(df$Month)
# Print the result
cat("Class of Month variable in", df_name, ":", month_class, "\n")
}
summary(swind_dr1_nov20)
# When trying to bind the columns it says that: Can't combine `..1$Number of CIN plans that started this month in the LA` <double> and `..4$Number of CIN plans that started this month in the LA` <character>.
# Look at the class of the CIN column
dataframe_names <- c("swind_dr1_ap21", "swind_dr1_apr22", "swind_dr1_nov21",
"swind_dr1_nov22", "swind_dr1_nov20")
# Loop over the dataframe names
for (df_name in dataframe_names) {
# Get the dataframe object using its name
df <- get(df_name)
# Check the class of the Month variable
CIN_class <- class(df$`Number of CIN plans that started this month in the LA`)
# Print the result
cat("Class of CIN variable in", df_name, ":", CIN_class, "\n")
}
## Nov 21 is character
View(swind_dr1_nov21)
# The CIN column says 'Currently unavailable'
# Code to change this into numeric like the rest so that it can bind
swind_dr1_nov21$`Number of CIN plans that started this month in the LA`<-
as.numeric(swind_dr1_nov21$`Number of CIN plans that started this month in the LA`)
## NAs introduced by coercion
# Binding the swindon files together
all_swind_dr1 <- bind_rows (swind_dr1_nov20, swind_dr1_ap21, swind_dr1_apr22, swind_dr1_nov21, swind_dr1_nov22)
#Adding variable for LA
LA = c("Swindon")
all_swind_dr1$LA <- "Swindon"
# Move LA variable so that it's the first column. So far not working, come back to
# all_lancs_dr1 %%
#  relocate(LA) %%
#  head()
# Reading in TELFORD AND WREKIN INDIVIDUALLY -------
telford_dr1_nov20 <- read_excel("Data/FS_DR1/telford_dr1_nov20(3).xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
colnames(telford_dr1_nov20)
# Need to drop three columns. Number 3, 4, 6
telford_dr1_nov20 <- telford_dr1_nov20[-c(3,4,6)]
#Reading in the rest of the files for Telford
telford_dr1_apr21 <- read_excel("Data/FS_DR1/telford_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
telford_dr1_nov21 <- read_excel("Data/FS_DR1/telford_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
telford_dr1_apr22 <- read_excel("Data/FS_DR1/telford_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
telford_dr1_nov22 <- read_excel("Data/FS_DR1/telford_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Merging Telford
all_telford_dr1 <- bind_rows(telford_dr1_nov20, telford_dr1_apr21, telford_dr1_apr22,
telford_dr1_apr22, telford_dr1_apr22)
LA = c("Telford")
all_telford_dr1$LA <- "Telford"
# Reading in WALSALL INDIVIDUALLY -----------------
walsall_dr1_nov20 <-  read_excel("Data/FS_DR1/walsall_dr1_nov20.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
colnames(walsall_dr1_nov20)
# Removing extra columns
walsall_dr1_nov20 <- walsall_dr1_nov20[-c(3,4,6)]
walsall_dr1_apr21 <-  read_excel("Data/FS_DR1/walsall_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
walsall_dr1_nov21 <-  read_excel("Data/FS_DR1/walsall_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
walsall_dr1_apr22 <-  read_excel("Data/FS_DR1/walsall_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
walsall_dr1_nov22 <-  read_excel("Data/FS_DR1/walsall_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Merging the walsall data
all_walsall_dr1 <- bind_rows( walsall_dr1_nov20, walsall_dr1_apr21, walsall_dr1_nov21,
walsall_dr1_apr22, walsall_dr1_nov22)
LA <- c("Walsall")
all_walsall_dr1$LA <- "Walsall"
View(all_walsall_dr1)
# Reading in WANDWSWORTH INDIVIDUALLY -----------
wands_dr1_nov20 <-  read_excel("Data/FS_DR1/wandsworth_dr1_nov20.xlsx",
sheet = "DR1 - Data - aggregate level",
range = "A1:O13",
col_names = TRUE,
trim_ws = TRUE)
colnames(wands_dr1_nov20)
# Removing extra columns
wands_dr1_nov20 <- wands_dr1_nov20[-c(3,4,6)]
wands_dr1_apr21 <-  read_excel("Data/FS_DR1/wandsworth_dr1_apr21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
wands_dr1_nov21 <-  read_excel("Data/FS_DR1/wandsworth_dr1_nov21.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
wands_dr1_apr22 <-  read_excel("Data/FS_DR1/wandsworth_dr1_apr22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
wands_dr1_nov22 <-  read_excel("Data/FS_DR1/wandsworth_dr1_nov22.xlsx",
sheet = "DR1 - Data - aggregate level",
col_names = TRUE,
trim_ws = TRUE)
# Merging the walsall data
all_wands_dr1 <- bind_rows(wands_dr1_nov20, wands_dr1_apr21, wands_dr1_nov21,
wands_dr1_apr22, wands_dr1_nov22)
LA <- c("Wandsworth")
all_wands_dr1$LA <- "Wandsworth"
View(all_wands_dr1)
# Investigating column names to ensure they are consistent across LAs
# SWINDON
colnames(all_swind_dr1)
#FIRST DECIDE WHICH CIN definition is being used.
# Dropping the 12th column for Swindon ([13] "Number of open CIN cases this month in the LA")
# all_swind_dr1 <- all_swind_dr1[-c(13)]
#TELFORD
colnames(all_telford_dr1) # consistent
# WALSALL
colnames(all_walsall_dr1)
# DO NOT DO UNTIL COLUMNS CONFIRMED
#Shortening the column names and standardising them across LAs
colnames(all_lancs_dr1)
#colnames(all_lancs_dr1)[3]  <- "Proportion children eligible and claiming FSM"
#colnames(all_lancs_dr1)[5]  <- "CLA at end of month"
#colnames(all_lancs_dr1)[6]  <- "New CLA this month"
#colnames(all_lancs_dr1)[7]  <- "CIN plans started this month"
#colnames(all_lancs_dr1)[8]  <- "Open CIN cases this month"
#colnames(all_lancs_dr1)[9]  <- "CPPs started started this month"
#colnames(all_lancs_dr1)[10]  <- "Open CPPs this month"
#colnames(all_lancs_dr1)[11]  <- "New referrals this month"
#Checking this worked
#colnames(all_lancs_dr1)
# Applying the column names to the other LAs and checking to see whether it worked
#colnames(all_swind_dr1) <- colnames(all_lancs_dr1)
#colnames(all_swind_dr1)
#colnames(all_telford_dr1) <- colnames(all_lancs_dr1)
#colnames(all_telford_dr1)
#colnames(all_walsall_dr1) <- colnames(all_lancs_dr1)
#colnames(all_walsall_dr1)
#colnames(all_wands_dr1) <- colnames(all_lancs_dr1)
#colnames(all_wands_dr1)
# TO DO NEXT ------
# Do I want to bind_rows to combine these datasets? Or merge on the date?
# ALL DR1s in one dataset with ROWS BINDED
all_dr1_bind <- bind_rows(all_lancs_dr1, all_swind_dr1, all_telford_dr1,
all_walsall_dr1, all_wands_dr1)
View(all_dr1_bind)
# Merging Telford
all_telford_dr1 <- bind_rows(telford_dr1_nov20, telford_dr1_apr21, telford_dr1_apr22,
telford_dr1_apr22, telford_dr1_nov22)
all_dr1_bind <- bind_rows(all_lancs_dr1, all_swind_dr1, all_telford_dr1,
all_walsall_dr1, all_wands_dr1)
View(all_dr1_bind)
# Cleaning the family safeguarding dataset for SFPC
###################################################
# Check if latest version of R
install.packages("installr")
library(installr)
updateR()
